ingress:
{{- if and (hasKey .Values.whoami "hostname" ) (hasKey .Values.whoami "certmanager_cluster_issuer" )  }}
  tls:
    - hosts:
      - {{ .Values.whoami.hostname }}
      secretName: {{ .Values.whoami.hostname }}
{{- end }}
{{- if hasKey .Values.whoami "hostname" }}
  hosts:
    - host: {{ .Values.whoami.hostname }}
      paths:
        - path: /
          pathType: Prefix
{{- end }}
  annotations:
    # generate ssl certificate
    # cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer"
    #cert-manager.io/cluster-issuer: "ca-cluster-issuer"
{{- if hasKey .Values.whoami "certmanager_cluster_issuer" }}
    cert-manager.io/cluster-issuer: {{ .Values.whoami.certmanager_cluster_issuer }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
{{- end }}
    # IP White list
    # nginx.ingress.kubernetes.io/whitelist-source-range: x.x.x.x/32,y.y.y.y/32
    # nginx.ingress.kubernetes.io/denylist-source-range: 0.0.0.0/0
{{- if hasKey .Values.whoami "whitelist_source_range" }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.whoami.whitelist_source_range }}
{{- end }}
#    # enable basic auth
#    nginx.ingress.kubernetes.io/auth-type: basic
#    nginx.ingress.kubernetes.io/auth-secret: ingress-nginx/basic-auth
#    nginx.ingress.kubernetes.io/auth-secret-type: auth-file
#    nginx.ingress.kubernetes.io/auth-realm: "Progress Authentication"

