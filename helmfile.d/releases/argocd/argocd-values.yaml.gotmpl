---
configs:
  params:
    server.insecure: true
  secret:
    argocdServerAdminPasswordMtime: "2023-12-01T10:11:12Z"
  cmp:
    create: true
    plugins:
      helmfile:
        version: v1.0
        allowConcurrency: true
        lockRepo: false
        init:
          command: [bash,-c]
          args:
            - 'echo "Initializing..."'
        generate:
          command: [bash,-c]
          args:
            - |
              echoerr() { printf "%s\n" "$*" >&2; }
              echoerr "starting generate"
              if [[ -v ARGOCD_ENV_HTTP_PROXY ]]; then
                export http_proxy="${ARGOCD_ENV_HTTP_PROXY}"
                export https_proxy="${ARGOCD_ENV_HTTPS_PROXY}"
                export no_proxy="${ARGOCD_ENV_NO_PROXY}"
              fi
              HELMFILE_ARGS="--no-color --allow-no-matching-release "
              if [[ -v ARGOCD_APP_NAMESPACE ]]; then
                HELMFILE_ARGS="${HELMFILE_ARGS} -n ${ARGOCD_APP_NAMESPACE} "
              fi
              if [[ -v ENV_NAME ]]; then
                HELMFILE_ARGS="${HELMFILE_ARGS} -e ${ENV_NAME} "
              elif [[ -v ARGOCD_ENV_ENV_NAME ]]; then
                HELMFILE_ARGS="${HELMFILE_ARGS} -e ${ARGOCD_ENV_ENV_NAME} "
              fi
              if [[ -v ARGOCD_ENV_HELMFILE_FILE ]]; then
                HELMFILE_ARGS="${HELMFILE_ARGS} -f ${ARGOCD_ENV_HELMFILE_FILE} "
              else
                HELMFILE_ARGS="${HELMFILE_ARGS} -f ${ARGOCD_ENV_HELMFILE_FILE}.failed "
              fi
              helmfile ${HELMFILE_ARGS} template --include-crds --include-needs -q
repoServer:
  extraContainers:
    - name: helmfile
      # use image from https://github.com/helmfile/helmfile
      image: ghcr.io/helmfile/helmfile-debian-stable-slim:v0.162.0
      # Entrypoint should be Argo CD lightweight CMP server i.e. argocd-cmp-server
      command:
        - /var/run/argocd/argocd-cmp-server
      #  - --loglevel
      #  - debug
      env:
        - name: HELM_CACHE_HOME
          value: /tmp/helm/cache
        - name: HELM_CONFIG_HOME
          value: /tmp/helm/config
        - name: HELMFILE_CACHE_HOME
          value: /tmp/helmfile/cache
        - name: HELMFILE_TEMPDIR
          value: /tmp/helmfile/tmp
{{- if hasKey .Values "proxy" }}
{{- if hasKey .Values.proxy "http_proxy" }}
        - name: http_proxy
          value: {{ .Values.proxy.http_proxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy.http_proxy }}
{{- end }}
{{- if hasKey .Values.proxy "https_proxy" }}
        - name: https_proxy
          value: {{ .Values.proxy.https_proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy.https_proxy }}
{{- end }}
{{- if hasKey .Values.proxy "no_proxy" }}
        - name: no_proxy
          value: {{ .Values.proxy.no_proxy }}
        - name: NO_PROXY
          value: {{ .Values.proxy.no_proxy }}
{{- end }}
{{- end }}
{{- if hasKey .Values "sops" }}
{{- if hasKey .Values.sops "age" }}
        - name: SOPS_AGE_KEY_FILE
          value: /sops-age-key-file/key.txt
{{- end }}
{{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        # Register helmfile plugin into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: helmfile.yaml
          name: argocd-cmp-cm
        # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps mitigate path traversal attacks.
        - mountPath: /tmp
          name: cmp-tmp
        - mountPath: /var/run/argocd
          name: var-files
{{- if hasKey .Values "sops" }}
{{- if hasKey .Values.sops "age" }}
        - mountPath: /sops-age-key-file
          name: sops-age-key-file
  env:
    - name: SOPS_AGE_KEY_FILE
      value: /sops-age-key-file/key.txt
{{- end }}
{{- end }}
  volumes:
{{- if hasKey .Values "sops" }}
{{- if hasKey .Values.sops "age" }}
    - name: sops-age-key-file
      secret:
        defaultMode: 420
        secretName: sops-age-key-file
{{- end }}
{{- end }}
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - name: helmfile-tmp
      emptyDir: {}
    - name: cmp-tmp
      emptyDir: {}
